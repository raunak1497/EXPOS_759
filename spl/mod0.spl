alias funcnum R1;
alias currPID R2;
alias Counter R3;

breakpoint;

//accquire disk
if(funcnum==3)then

//disk busy invoke scheduler
while([DISK_STATUS_TABLE]==1)do
		[PROCESS_TABLE+currPID*16+4]=WAIT_DISK;
		backup;
		call MOD_5;
		restore;
endwhile;

//locking the disk table
	[DISK_STATUS_TABLE]=1;
	[DISK_STATUS_TABLE+4]=currPID;

endif;


//accquire terminal
if(funcnum==8)then
	//print "Accquire terminal";
	while([TERMINAL_STATUS_TABLE]!=0) do
		[PROCESS_TABLE+16*currPID+4]=WAIT_TERMINAL;
		backup;
		call MOD_5;
		restore;
	endwhile;
	[TERMINAL_STATUS_TABLE]=1;
	[TERMINAL_STATUS_TABLE+1]=currPID;
	return;
endif;

//release treminal
if(funcnum==9)then
	if(currPID==[TERMINAL_STATUS_TABLE+1])then
		[TERMINAL_STATUS_TABLE]=0;
	Counter=0;
	while(Counter<=15)do
		if([PROCESS_TABLE+16*Counter+4]==WAIT_TERMINAL)then
			[PROCESS_TABLE+16*Counter+4]=READY;
		endif;
		Counter = Counter + 1;
	endwhile;
	R0=0;
	else
		R0=-1;
		return;
	endif;
endif;

return;
			

